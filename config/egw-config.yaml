# you must also specify the node id and node cluster, e.g.,
# --config-yaml '{"node":{"cluster":"marin3r", "id":"egw-sample.sample-adhoc"}}'
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

# how to connect to the xDS control plane (i.e., marin3r-discoveryservice)
static_resources:
  clusters:
  - name: marin3r
    connect_timeout: 1s
    type: LOGICAL_DNS
    respect_dns_ttl: true
    load_assignment:
      cluster_name: marin3r
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: marin3r-discoveryservice
                port_value: 18000
    http2_protocol_options: {}
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        '@type': type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
        common_tls_context:
          tls_certificate_sds_secret_configs:
            - sds_config:
                path: /etc/envoy/bootstrap/tls_certificate_sds_secret.json
    upstream_connection_options:
      # configure a TCP keep-alive to detect and reconnect to the admin
      # server in the event of a TCP socket half open connection
      tcp_keepalive:
        keepalive_probes: 3
        keepalive_time: 10
        keepalive_interval: 5
  - name: endpoints
    connect_timeout: 1s
    type: LOGICAL_DNS
    respect_dns_ttl: true
    load_assignment:
      cluster_name: endpoints
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: endpoints.epic
                port_value: 18000
    http2_protocol_options: {}
    upstream_connection_options:
      # configure a TCP keep-alive to detect and reconnect to the admin
      # server in the event of a TCP socket half open connection
      tcp_keepalive:
        keepalive_probes: 3
        keepalive_time: 10
        keepalive_interval: 5

# Connect to Marin3r and download config from there
dynamic_resources:
  ads_config:
    transport_api_version: V2
    api_type: GRPC
    grpc_services:
    - envoy_grpc:
        cluster_name: marin3r
  cds_config:
    resource_api_version: V2
    ads: {}
  lds_config:
    resource_api_version: V2
    ads: {}

layered_runtime:
  layers:
  - name: marin3r  # marin3r is the baseline
    rtds_layer:
      name: runtime
      rtds_config:
        resource_api_version: V2
        ads: {}
  - name: admin    # the admin console allows overrides
    admin_layer: {}
